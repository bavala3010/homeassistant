# Configure a default setup of Home Assistant (frontend, api, etc)
# Als de default_config gedeactiveerd wordt, dan verschijnt kaart (map) niet standaard in het menu
# default_config:

# useful links
# https://www.uuidgenerator.net/
# https://emojidb.org/
# https://pictogrammers.github.io/@mdi/font/6.6.96/
# https://materialdesignicons.com/
# https://mdi.bessarabov.com/
# https://www.zapsplat.com/sound-effect-category/sirens-and-alarms/
# https://app.diagrams.net/
# https://demo.home-assistant.io/#/energy
# https://www.tablesgenerator.com/markdown_tables#


# integration (Riemann sum integral) unit moet k, M, G of T zijn. (NIET kW of kWh) 
# Attention: the “platform: integration” does not support the state_class: measurement
# Therefore it does not show up in the energy dashboard.

# An integration sensor is useful in energy billing scenarios since energy is generally billed in kWh and many sensors provide power in W (Watts).
# If you have a sensor that provides you with power readings in Watts (uses W as unit_of_measurement), 
# then you can use the integration sensor to track how much energy is being spent.

#   Examples
#   value_template: '{{ (value| float)}}'
#   value_template: '{{ (value.rstrip(" °C") | float) }}'
#   value_template: '{{ (value.rstrip(" %") | float) }}'


# OLD method
# sensor:
#   - platform: template
#     sensors:
#       energy_return:
#
# NEW method
# template:
#   - sensor:
#       - name: "energy_return"


assist_pipeline:
backup:

battery_notes:

bluetooth:
cloud:                  # for Nabu Case cloud
config:
conversation:           # to speak to Home Assistant
counter:
daikin_residential:
  email: bartland@gmail.com
  password: Qc#DHeq9!7!WEe*

device_tracker:
  # - platform: bluetooth_tracker  

  # gedesactiveerd op 8 dec 2023 (veel te veel smart tags gevonden)
  # - platform: bluetooth_le_tracker
  #   track_new_devices: true
  #   interval_seconds: 30


  # - platform: tomato
  #   host: 192.168.68.1
  #   username: root
  #   password: admin
  #   http_id: TID3fac41d84c91e1a8
dhcp:
# discover:
energy:
frontend:
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /hacsfiles/hass-hue-icons/hass-hue-icons.js
    - /hacsfiles/lovelace-card-mod/card-mod.js
hardware:
history:
homeassistant_alerts:
image_upload:
input_boolean:
input_button:
input_datetime:
input_number:
input_text:
  trigger_source:
    name: Trigger Source  #String om bij te houden welke sensor het alarm triggert
light:
logbook:
logger:
  default: error
  logs:
    custom_components.multiscrape: debug  
# map:  # Enables in the left menu a map showing the location of tracked devices
media_source:
mobile_app:
my:
network:
person:
scene: !include scenes.yaml
schedule:
script: !include_dir_merge_named scripts
ssdp:
stream:
sun:
system_health:
tag:
timer:
  car_climatisation:
    icon: mdi:radiator
usb:
webhook:
zeroconf:
zone:

# lovelace:
#   mode: yaml
#   resources:
#     - url: /hacsfiles/lovelace-time-picker-card/time-picker-card.js
#       type: module

# lovelace:
#   mode: yaml
#   resources:
#     - url: /hacsfiles/battery-state-card/battery-state-card.js
#       type: module

# python_script is not the same as pyscript. It is less advanced.
# python_script:
# pyscript is more advanced than python_script. pyscript can do imports of libraries
# pyscript:
#   allow_all_imports: true
#   hass_is_global: true


##### Text to speech ##########################################
tts:
  - platform: google_translate
    cache: false
    cache_dir: /tmp/tts
    time_memory: 57600    #min 60 max 57600 (16 hours)
    # base_url: http://192.168.86.100:8123
    service_name: google_say
    language: 'nl'
  - platform: edge_tts
    language: nl-BE-DenaNeural    #nl-BE-ArnaudNeural

##### YAML file locations #####################################    
group: !include groups.yaml
automation: !include automations.yaml

google_assistant: !include google_assistant_integration.yaml
shell_command: !include shell_commands.yaml

#####################################################
homeassistant:
  name: Eikenbos
  country: BE
  currency: EUR
  external_url: https://ha.bartland.duckdns.org
  internal_url: http://192.168.68.100:8123
  time_zone: "Europe/Brussels"
  language: nl

  auth_providers:
    - type: homeassistant
    - type: trusted_networks # Trusted Networks auth provider defines a range of IP addresses for which no authentication will be required (also known as “allowlisting”).
      trusted_networks:
      # /24 betekent geldig voor heel het subnet
      # /32 betekent enkel geldig voor het vermelde ip-adres
        - 192.168.68.0/24    # warning: this enables the trust on the whole network !
        - 192.168.68.41/32   # ip address of the "living speaker"
        - 192.168.68.34/32
        - 192.168.68.240/32  
        - 192.168.68.26/32   # Chromebook
      trusted_users:
        192.168.68.41: 87d0c2e6c3d4403396d34b43046072ae # ID of the HA user "Bart"
        # 192.168.68.41: 12bbc36927b7443c915b9492d89f6c24 # ID of the HA user "Madouce"
      allow_bypass_login: true

  allowlist_external_dirs:
    - "/config"

  packages: !include_dir_named packages
  
  customize:
    zone.home:
      radius: 500

  # changes required for the engery dashboard (info from 16/10/2022)
  # You don’t need a last reset for the total_increasing state_class
    sensor.ontvochtiger_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.wasmachine_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.droogkast_energieverbruik:
      device_class: energy
      state_class: total_increasing   

    sensor.infraroodpaneel_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.badkamer_elektrische_verwarming_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.living_tv_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.amilya_tv_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.alunya_tv_energieverbruik:
      device_class: energy
      state_class: total_increasing

    sensor.master_bedroom_tv_energieverbruik:
      device_class: energy
      state_class: total_increasing

  # secrets should not be mentioned in this file; it is automatic !
  # secrets: !include secrets.yaml

  # manuele aanpassing van alle sensoren eindigend op "energieverbruik" om in het energy dashboard te krijgen
  customize_glob:
    # sensor.*energieverbruik:
    #   unit_of_measurement: "kWh"
    #   device_class: energy
    #   state_class: total_increasing
    #   last_reset: "1970-01-01T00:00:00+00:00"

    sensor.*energy:
      unit_of_measurement: "kWh"     
      device_class: energy
      state_class: total_increasing  # measurement werkt niet in energy dashboard
      last_reset: "1970-01-01T00:00:00+00:00"

    sensor.*productie:
      unit_of_measurement: "kWh"     
      device_class: energy
      state_class: total_increasing
      last_reset: "1970-01-01T00:00:00+00:00"  

    # the sensor.zonne_energie_totaal created by the "integration" integration 
    # does not have the necessary attributes to be used in the energy dashboard.
    # Therefore, this customization adds the necessary attributes.
    sensor.zonne_energie_totaal:
      # source: sensor.solar_power
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing # of moet het "measurement" of "total" zijn ?
      last_reset: "1970-01-01T00:00:00+00:00"
      icon: mdi:chart-histogram
      

#####################################################
# needed when using reverse proxy managers (eg. Nginx)
http:
  # Opgelet: het pad naar het certificaat moet vanuit de Home Assistant Docker container bereikbaar zijn.
  # Daarom wordt in het docker-compose.yml bestand het volume gemapt: /opt/letsencrypt:/opt/letsencrypt
  # De certificaten worden automatisch vernieuwd door NGINX proxy manager die in een aparte docker draait
  # ssl_certificate: /opt/letsencrypt/live/npm-25/fullchain.pem
  # ssl_key: /opt/letsencrypt/live/npm-25/privkey.pem
  use_x_forwarded_for: true
  trusted_proxies:
  # - 192.168.68.0/24   # the IP address of the proxy server
  # - 192.168.155.0/24  # the IP range of the Droidland hotspot  
    - 172.18.0.8        # dit is het ip-adres van nginx in docker
    - 172.18.0.0/24
    - 172.18.0.2        # the IP address of the Wireguard server
    - 172.18.0.3        # ???
    - 10.13.13.2        # WireGuard client Bart gsm
    - 10.13.13.3        # WireGuard client Madouce gsm
    - 10.13.13.4        # WireGuard client Chromebook Bart    
  ip_ban_enabled: false         # use this to enable auto IP ban
  login_attempts_threshold: 3   # set the number of allowed login attempts


recorder:
  purge_keep_days: 14
  commit_interval: 30
  include:
    entities:
      - device_tracker.bart_s10
      - device_tracker.bart_s23plus   # nodig voor automatisatie voordeur opendoen bij thuiskomst
      - device_tracker.madouce_s20    # nodig voor automatisatie voordeur opendoen bij thuiskomst
  exclude:
    entities:
      - sensor.date
      - sensor.time
      - sensor.today_is
      - sensor.time_utc
      - sensor.time_date
      - sensor.time_online
      - sensor.moon
      - sensor.month_is
      - sensor.low_battery      
      - sensor.last_boot
      - sun.sun
      - sensor.disk_use_percent
      - binary_sensor.alunya_a71_apparaat_vergrendeld
      - binary_sensor.alunya_a71_interactief
      - binary_sensor.sm_g975f_interactive
      - sensor.google_wifi_system_aaaaabzipgy_upload_traffic
      - sensor.google_wifi_system_aaaaabzipgy_download_traffic
      - sensor.network_in_eth0
      # - sensor.net_neutrality_home
      # - sensor.net_neutrality_car
      # - sensor.net_neutrality
    domains:
      - automation
      - camera
      - device_tracker  # nearly every device has a location tracker
      - group
      - persistent_notification
      - scene
      - script
      - sun
      - updater
      - weather
      - weblink
      - zone
      - zwave
      # do not exclude mediaplayer, otherwise the daily statistics will not work

influxdb:
  api_version: 2
  ssl: false
  host: localhost
  port: 8086
  token: caGcix5eP8n53E1msFJcpBFm6M6gxwXTG2gHAkRfQCEAMdho5E5XrCLVJym3Ndl5nGnU1-DFphLkR3Nh0LIiiw==
  organization: 6fe6192d84027fb4
  bucket: HomeAssistant
  default_measurement: state
  tags:
    source: HA
  tags_attributes:
    - friendly_name

#fan:    
#  - platform: xiaomi_miio_airpurifier
#    name: Xiaomi Air Purifier 3H
#    host: 192.168.68.247
#    token: !secret purifier_3H_token
#    model: zhimi.airpurifier.mb3

netatmo:
# create client_id and client_secret at https://dev.netatmo.com/apps

# Eikenbos (bart@van-landschoot.be)
  client_id: 639ccb520c005b86eb0280a2
  client_secret: SHtT5LrjtoCwT3IcrSiSCsDySu9eyva2zkJt2uivk5ko

# Waarschoot (bartland@gmail.com)
#  client_id: 60d72f7458da3d00f57f4fd5 
#  client_secret: cEP5HXSCw74AEey7KkpEFIBwrzO

alarm_control_panel:
  - platform: manual
    name: home alarm
    code: !secret alarm_code
    code_arm_required: false
    arming_time: 60 # numer of seconds in arming status before alarm is put on armed status
    delay_time: 30 # number of seconds in pending status before the alarm triggers
    trigger_time: 4 # number of seconds in triggered status before the alarm is fired
    disarmed:
      trigger_time: 0
    armed_home:
      arming_time: 0
      delay_time: 0

sensor:
  - platform: powercalc
    name: unload_battery
    daily_fixed_energy:
      value: 0.00

  - platform: buienalarm
    timeframe: 15
    name: buienalarm
    monitored_conditions:
      - temperature
      - precipitation
      - precipitation_forecast_average
      - precipitation_forecast_total
      - next_rain_forecast

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - "date_time"
      - 'time_date'
      - 'time_utc'

  - platform: min_max
    type: mean
    name: avg_outside_temp
    entity_ids:
      - sensor.buienalarm_temperature
      - sensor.buienradar_temperature
    round_digits: 2
    
  - platform: min_max
    type: mean
    name: avg_inside_humidity
    entity_ids:
      - sensor.living_humidity
      - sensor.kamer_amilya_humidity
      - sensor.veranda_humidity
      - sensor.gang_humidity
      - sensor.badkamer_humidity
      - sensor.kamer_alunya_humidity
      - sensor.master_bedroom_humidity
    round_digits: 0
    
  - platform: min_max
    type: mean
    name: avg_inside_temperature
    entity_ids:
      - sensor.living_temperature
      - sensor.kamer_amilya_temperature
      - sensor.veranda_temperature
      - sensor.gang_temperature
      - sensor.badkamer_temperature
      - sensor.kamer_alunya_temperature
      - sensor.master_bedroom_temperature
    round_digits: 1

  - platform: history_stats
    name: "Bart thuis vandaag"
    entity_id: person.bart
    state: 'home'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: "Madouce thuis vandaag"
    entity_id: person.madouce
    state: 'home'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: "Amilya thuis vandaag"
    entity_id: person.amilya
    state: 'home'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: history_stats
    name: "Alunya thuis vandaag"
    entity_id: person.alunya
    state: 'home'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: template
    sensors:
      day_max_temp_datetime:
        friendly_name: "max dagtemperatuur uur"
        unit_of_measurement: "h"
        value_template: >
          {% set start = now().replace(hour=0,minute=0,second=0, microsecond=0) %}
          {% set end = (start + timedelta(days=1)) %}
          {% set start = start.strftime("%Y-%m-%dT%H:%M:%S+00:00") %}
          {% set end = end.strftime("%Y-%m-%dT%H:%M:%S+00:00") %}
          {% set ns = namespace(min_temp=100, max_temp=-100) %}
          {% for i in state_attr('weather.eikenbos_openweather', 'forecast') -%}
            {% if start <= i.datetime < end %}
              {% if i.temperature < ns.min_temp %}
                {% set ns.min_temp = i.temperature %}
                {% set ns.min_temp_datetime = i.datetime %}
              {% endif %}
              {% if i.temperature > ns.max_temp %}
                {% set ns.max_temp = i.temperature %}
                {% set ns.max_temp_datetime = i.datetime %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ as_timestamp(ns.max_temp_datetime)|timestamp_custom('%H:%M') }}


###################################################################################
# Integration
# The Riemann sum integration calculates energy (in kWh) from a power sensor (in W)
# integration (Riemann sum integral) unit moet k, M, G of T zijn. (NIET kW of kWh) 
###################################################################################

#  - platform: integration
#    source: sensor.all_lights_power
#    name: Totaal energieverbruik lichten
#    unit_prefix: k
#    unit: kWh
#    round: 2

  - platform: integration
    source: sensor.power_production_now
    name: gerealiseerde zonneproductie
    unit_prefix: k
    unit_time: h

  - platform: integration
    # creates a sensor called: sensor.huis_energieverbruik in kWh
    source: sensor.huisverbruik
    name: huis energieverbruik
    unit_prefix: k
    round: 2
    method: left

  - platform: integration
    # creates a sensor called sensor.zonne_energie_totaal in kWh
    source: sensor.solar_power
    name: zonne energie totaal
    unit_prefix: k
    round: 2
    method: left

  - platform: filter
    name: net power avg
    entity_id: sensor.net_power
    unique_id: 'c6d3b0f5-dcb7-4016-bb3f-c06ccaa1bc71'
    filters:
      - filter: outlier
        window_size: 20   # number of samples taken (was vroeger 6, nu aangepast naar 20 als test)
        radius: 10000  # ignore readings if difference is bigger than 10000
      - filter: time_simple_moving_average
        window_size: "00:02"
      # - filter: throttle
      #   window_size: 120

  - platform: filter
    name: net power avg 1min
    entity_id: sensor.net_power
    unique_id: 'da279b6e-3451-4ba2-bf08-cf4cdf2997ba'
    filters:
      - filter: outlier
        window_size: 6   # number of samples taken (was vroeger 6, nu aangepast naar 20 als test)
        radius: 10000  # ignore readings if difference is bigger than 10000
      - filter: time_simple_moving_average
        window_size: "00:01"

###############################################################################
# template / sensor
###############################################################################

# this is the new way to define sensors via templates

template:
  - sensor:
      - name: net_consumption_energy_total
        unit_of_measurement: kWh # dit moet kWh (exact zo geschreven)
        device_class: energy    
        state_class: total    # or "measurement"
        # total of the energy calculated by Shelly 3EM
        state: >
          {% set phase1 = states('sensor.shellyem3_bcff4dfd1dbb_channel_a_energy') | float(default=0) %}
          {% set phase2 = states('sensor.shellyem3_bcff4dfd1dbb_channel_b_energy') | float(default=0) %}
          {% set phase3 = states('sensor.shellyem3_bcff4dfd1dbb_channel_c_energy') | float(default=0) %}
          {{ float(phase1) + float(phase2) + float(phase3) }}
        availability: >
          {{ not ( is_state('sensor.shellyem3_bcff4dfd1dbb_channel_a_energy', 'unavailable') or
          is_state('sensor.shellyem3_bcff4dfd1dbb_channel_b_energy', 'unavailable') or
          is_state('sensor.shellyem3_bcff4dfd1dbb_channel_c_energy', 'unavailable') ) }}
        attributes:         
          last_reset: '1970-01-01T00:00:00+00:00'

      - name: net_injection_energy_total
        unit_of_measurement: kWh # dit moet kWh zijn (exact zo geschreven)
        device_class: energy
        state_class: total    # or "measurement"
        state: >
          {% set phase1 = states('sensor.shellyem3_bcff4dfd1dbb_channel_a_energy_returned') | float(default=0) %}
          {% set phase2 = states('sensor.shellyem3_bcff4dfd1dbb_channel_b_energy_returned') | float(default=0) %}
          {% set phase3 = states('sensor.shellyem3_bcff4dfd1dbb_channel_c_energy_returned') | float(default=0) %}
          {{ float(phase1) + float(phase2) + float(phase3) }}
        availability: >
          {{ not ( is_state('sensor.shellyem3_bcff4dfd1dbb_channel_a_energy_returned', 'unavailable') or
          is_state('sensor.shellyem3_bcff4dfd1dbb_channel_b_energy_returned', 'unavailable') or
          is_state('sensor.shellyem3_bcff4dfd1dbb_channel_c_energy_returned', 'unavailable') ) }}  
        attributes:         
          last_reset: '1970-01-01T00:00:00+00:00'

      - name: "verwachte zonneproductie morgen"
        unit_of_measurement: kWh
        state: >
          {{ (states('sensor.energy_production_tomorrow') | float + states('sensor.energy_production_tomorrow_2') | float ) | round() }}

      - name: "huisverbruik"
        unique_id: '3b201f08-68f2-4b19-8f98-3fa1fd580316'
        state: >
            {{ states('sensor.solar_power') | float(default=0) + (states('sensor.net_power') | float(default=0) ) | round(0) }}
        unit_of_measurement: W
        device_class: power
        state_class: measurement   # total_increasing

################################################################################
# binary sensors
################################################################################

binary_sensor:
  - platform: ping
    name: google_server
    host: 8.8.8.8
    scan_interval: 5    # scan every 5 minutes

rest_command:
# webhook om meterstanden op de site energieid te posten
  energie_id_set_electricity_usage:
    url: !secret energie_id_usage_webhook
    method: 'post'
    content_type: 'application/json'
    payload: '{"remoteId": "ha-webhook-electricity", "remoteName": "Elektriciteit (Home Assistant)", "metric": "electricityImport", "unit": "kWh", "readingType": "counter", "data": [["{{ now().isoformat() }}", {{ usage }}]]}'

# Deze code hieronder in automatisaties gebruiken    
# service: rest_command.energie_id_set_electricity_usage
#  data:
#    usage: "{{ states('input_number.electricity_usage') | int }}"  


################################################
# Send car info to A Better Route Planner
# info: https://juju.nz/michaelh/post/2021/abrp/
################################################
  update_abrp:
    method: POST
    headers:
      content_type: "charset=utf-8; application/x-www-form-urlencoded"
    url: >
      http://api.iternio.com/1/tlm/send?token=444e9623-255e-44b7-b2cd-bf9dade6f46b&api_key=846001dd-c532-4e61-a9f4-11cd1123fb6b&tlm={"utc":{{ as_timestamp(utcnow()) | float(default=0) }},"soc":{{ states('sensor.audi_e_tron_sportback_state_of_charge') }},"soh":99,"is_charging":"no","car_model":"audi:etron:21:86:other"}

        
# Add Portainer to Home Assistant navigation menu
panel_iframe:
  portainer:
    title: "Portainer"
    url: "http://192.168.68.100:9000/"
    icon: mdi:docker
    require_admin: true

  # automation_list:
  #   title: "Automations"
  #   url: "http://192.168.86.100:8123/config/automation/dashboard"
  #   icon: mdi:list-box-outline
  #   require_admin: true

  duplicati:
    title: "Duplicati"
    url: "http://192.168.68.100:8200/"
    icon: mdi:backup-restore
    require_admin: true

  influxdb:
    title: "InfluxDB"
    url: "http://192.168.68.100:8086/orgs/6fe6192d84027fb4/dashboards/096bf9184c088000?lower=now%28%29%20-%202d"
    icon: mdi:backup-restore
    require_admin: true
  
panel_custom:
  - name: automations-tree
    # url_path needs to be unique for each panel_custom config
    url_path: automations-tree
    sidebar_title: Automations tree
    sidebar_icon: mdi:robot
    module_url: /local/tree-panel/automations-tree.js  

  - name: automations
    sidebar_title: Automations
    sidebar_icon: mdi:arrow-decision
    js_url: /api/hassio/app/entrypoint.js
    url_path: "config/automation/dashboard"
    embed_iframe: true
    require_admin: true
    config:
      ingress: core_configurator

battery_sim:
  auto_batterij:
    name: auto batterij
    import_sensor: sensor.charger_current_power
    export_sensor: sensor.unload_battery
    max_discharge_rate_kw: 11.0
    size_kwh: 90.0
    # energy_tariff: 0.30

  thuisbatterij:
    name: thuisbatterij
    import_sensor: sensor.solar_power
    export_sensor: sensor.unload_battery
    max_discharge_rate_kw: 11.0
    size_kwh: 10.0
    # energy_tariff: 0.00

# media_player:
#   - platform: samsungtv_custom
#     host: 192.168.68.204
#     port: 8001
#     sourcelist: '{"PlayStation": "KEY_HDMI1", "RaspberryPi": "KEY_HDMI2", "Chromecast": "KEY_HDMI3"}'

# camera:
#   - platform: generic
#     name: "LSC indoor camera (1920 x 1080)"
#     still_image_url: http://192.168.68.100:8123/local/images/lsc_indoor_camera.jpg
#     stream_source: rtsp://admin:admin@192.168.68.21:8554/Streaming/Channels/101

camera:
  - platform: ffmpeg
    input: rtsp://192.168.68.21/ch0_1.h264
    name: LSC indoor camera

# ha-continuous-casting-dashboard:
#   logging_level: debug #Required: Set the logging level - debug/info/warning (default is 'warning' - try 'debug' for debugging)
#   cast_delay: 45 #Required: Time (in seconds) for casting checks between devices
#   start_time: "07:00" #Required: Start time of the casting window (format: "HH:MM")
#   end_time: "02:00" #Required: End time of the casting window (format: "HH:MM") and must be after "00:00"
#   devices:
#     "living speaker": #Required: Display name of your device. Find this under device settings -> Information -> Device Name
#       dashboard_url: http://192.168.68.100:8123/lovelace-verbruik/zonne-energie" #Required: Dashboard URL to be casted



intent_script:
  solar_injection:
    action: []    
    speech:
      text: >
        {% set p = states('sensor.net_power_avg') | round(-2) | int %}
        {% set c = states('sensor.charger_current_power') | round(-2) | int %}
        {% if c == 0 %}
          {% if p < 0 %}Er is {{ p | abs }} Watt overschot.
          {% elif p > 0 %}Er is geen zonne-overschot. Er wordt {{ p | abs }} Watt verbruikt.
          {% endif %}
        {% elif c > 0 %}De auto laadt aan {{ c | abs }} Watt. Als de auto stopt met laden, kan er {{ (c + p) | round(-2) | int | abs }} Watt worden gebruikt.
        {% endif %}      
        {{ message }}
