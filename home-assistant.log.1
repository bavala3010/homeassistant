2022-02-27 08:53:16 WARNING (SyncWorker_0) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 12 and 13
2022-02-27 08:53:16 WARNING (SyncWorker_0) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 30 and 31
2022-02-27 08:53:16 WARNING (SyncWorker_0) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 48 and 49
2022-02-27 08:53:18 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration adaptive_lighting which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_1) [homeassistant.loader] We found a custom integration average which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_2) [homeassistant.loader] We found a custom integration xiaomi_miio_airpurifier which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_1) [homeassistant.loader] We found a custom integration hacs which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration audiconnect which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration monitor_docker which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_6) [homeassistant.loader] We found a custom integration localtuya which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_2) [homeassistant.loader] We found a custom integration xiaomi_miio_fan which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_4) [homeassistant.loader] We found a custom integration powercalc which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration tuya_v2 which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_8) [homeassistant.loader] We found a custom integration buienalarm which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_5) [homeassistant.loader] We found a custom integration shelly which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration thermal_comfort which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_9) [homeassistant.loader] We found a custom integration xiaomi_miot which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_2) [homeassistant.loader] We found a custom integration frigate which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_6) [homeassistant.loader] We found a custom integration googlewifi which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_4) [homeassistant.loader] We found a custom integration tgtg which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_7) [homeassistant.loader] We found a custom integration huesyncbox which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_1) [homeassistant.loader] We found a custom integration ytube_music_player which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_5) [homeassistant.loader] We found a custom integration deepstack_face which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_10) [homeassistant.loader] We found a custom integration scheduler which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration anniversaries which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_4) [homeassistant.loader] We found a custom integration google_home which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:18 WARNING (SyncWorker_8) [homeassistant.loader] We found a custom integration afvalbeheer which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 08:53:24 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: template value should be a string for dictionary value @ data['action'][0]['data']. Got None. (See ?, line ?). 
2022-02-27 08:53:25 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: invalid template (TemplateSyntaxError: expected token ',', got 'input_number') for dictionary value @ data['condition'][0]['value_template']. Got None. (See ?, line ?). 
2022-02-27 08:53:25 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: template value should be a string for dictionary value @ data['action'][0]['data']. Got None. (See ?, line ?). 
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:27 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:28 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'timestamp_custom' got invalid input 'None' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'timestamp_custom' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden'
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input '' when rendering template 'sinds {{ as_timestamp(states[config.entity].last_changed) | timestamp_custom('%H:%M', True) }} - {{ (as_timestamp(now()) - as_timestamp(states[config.entity].last_changed)) | timestamp_custom('%H:%M', False) }} geleden' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:28 WARNING (Thread-2) [homeassistant.helpers.template] Template variable warning: 'None' has no attribute 'last_changed' when rendering or compiling ''
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:53:28 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template 'Toyota Evere: {{ (10 * 27 * 1.3 / (states('sensor.car_range_per_10percent') | float))| round(0) }}% / {{ (10 * 27 * 2 * 1.3 / (states('sensor.car_range_per_10percent') | float(default=0) ))| round(0) }}%
Toyota Diest: {{ (10 * 36 *1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 36 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%
Waarschoot: {{ (10 * 110 * 1.3 / (states('sensor.car_range_per_10percent') | float)) | round(0) }}% / {{ (10 * 110 * 2 *1.3 / (states('sensor.car_range_per_10percent') | float(default=0) )) | round(0) }}%' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 08:54:01 ERROR (MainThread) [homeassistant.components.websocket_api.http.connection] [281473111125104] Received invalid command: mobile_app/push_notification_channel
2022-02-27 08:54:11 WARNING (MainThread) [homeassistant.config_entries] Config entry 'GoogleTV' for nfandroidtv integration not ready yet: Failed to connect; Retrying in background
2022-02-27 08:54:17 WARNING (MainThread) [homeassistant.util.async_] Detected blocking call inside the event loop. This is causing stability issues. Please report issue for google_cloud doing blocking calls at homeassistant/components/google_cloud/tts.py, line 212: self._client = texttospeech.TextToSpeechClient()
2022-02-27 08:54:17 ERROR (MainThread) [homeassistant.components.tts] Error setting up platform: google_cloud
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/components/tts/__init__.py", line 163, in async_setup_platform
    provider = await platform.async_get_engine(
  File "/usr/src/homeassistant/homeassistant/components/google_cloud/tts.py", line 162, in async_get_engine
    return GoogleCloudTTSProvider(
  File "/usr/src/homeassistant/homeassistant/components/google_cloud/tts.py", line 212, in __init__
    self._client = texttospeech.TextToSpeechClient()
  File "/usr/local/lib/python3.9/site-packages/google/cloud/texttospeech_v1/gapic/text_to_speech_client.py", line 141, in __init__
    self.transport = text_to_speech_grpc_transport.TextToSpeechGrpcTransport(
  File "/usr/local/lib/python3.9/site-packages/google/cloud/texttospeech_v1/gapic/transports/text_to_speech_grpc_transport.py", line 60, in __init__
    channel = self.create_channel(address=address, credentials=credentials)
  File "/usr/local/lib/python3.9/site-packages/google/cloud/texttospeech_v1/gapic/transports/text_to_speech_grpc_transport.py", line 87, in create_channel
    return google.api_core.grpc_helpers.create_channel(
  File "/usr/local/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 302, in create_channel
    composite_credentials = _create_composite_credentials(
  File "/usr/local/lib/python3.9/site-packages/google/api_core/grpc_helpers.py", line 236, in _create_composite_credentials
    credentials, _ = google.auth.default(
  File "/usr/local/lib/python3.9/site-packages/google/auth/_default.py", line 544, in default
    credentials, project_id = checker()
  File "/usr/local/lib/python3.9/site-packages/google/auth/_default.py", line 540, in <lambda>
    lambda: _get_gce_credentials(request),
  File "/usr/local/lib/python3.9/site-packages/google/auth/_default.py", line 274, in _get_gce_credentials
    if _metadata.ping(request=request):
  File "/usr/local/lib/python3.9/site-packages/google/auth/compute_engine/_metadata.py", line 85, in ping
    response = request(
  File "/usr/local/lib/python3.9/site-packages/google/auth/transport/_http_client.py", line 106, in __call__
    connection.request(method, path, body=body, headers=headers, **kwargs)
  File "/usr/local/lib/python3.9/http/client.py", line 1279, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/usr/local/lib/python3.9/http/client.py", line 1290, in _send_request
    self.putrequest(method, url, **skips)
  File "/usr/src/homeassistant/homeassistant/util/async_.py", line 166, in protected_loop_func
    check_loop(func, strict=strict)
  File "/usr/src/homeassistant/homeassistant/util/async_.py", line 154, in check_loop
    raise RuntimeError(
RuntimeError: Blocking calls must be done in the executor or a separate thread; Use `await hass.async_add_executor_job()` at homeassistant/components/google_cloud/tts.py, line 212: self._client = texttospeech.TextToSpeechClient()
2022-02-27 08:54:17 WARNING (MainThread) [homeassistant.components.fan] Platform xiaomi_miio_fan not ready yet: Unable to discover the device 192.168.86.28; Retrying in background in 30 seconds
2022-02-27 08:54:17 WARNING (MainThread) [homeassistant.components.fan] Platform xiaomi_miio_fan not ready yet: Unable to discover the device 192.168.86.29; Retrying in background in 30 seconds
2022-02-27 08:54:18 ERROR (MainThread) [homeassistant] Error doing job: Task exception was never retrieved
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/site-packages/hass_nabucasa/iot.py", line 122, in _async_handle_handler_message
    await self.client.send_json(response)
  File "/usr/local/lib/python3.9/site-packages/aiohttp/client_ws.py", line 165, in send_json
    await self.send_str(dumps(data), compress=compress)
  File "/usr/local/lib/python3.9/site-packages/aiohttp/client_ws.py", line 151, in send_str
    await self._writer.send(data, binary=False, compress=compress)
  File "/usr/local/lib/python3.9/site-packages/aiohttp/http_websocket.py", line 690, in send
    await self._send_frame(message, WSMsgType.TEXT, compress)
  File "/usr/local/lib/python3.9/site-packages/aiohttp/http_websocket.py", line 601, in _send_frame
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2022-02-27 08:54:18 WARNING (MainThread) [homeassistant.config_entries] Config entry '192.168.86.83' for synology_dsm integration not ready yet: ConnectionError = <urllib3.connection.HTTPSConnection object at 0xffff887f2d60>: Failed to establish a new connection: [Errno 113] Host is unreachable; Retrying in background
2022-02-27 08:54:20 ERROR (MainThread) [homeassistant.components.automation] Platform automation does not generate unique IDs. ID 0a0bce79-42d8-4184-9dab-9ed54f30f3bf already exists - ignoring automation.auto_laden_week_6u_8u_lader_op_timer
2022-02-27 08:54:20 ERROR (MainThread) [homeassistant.components.automation] Platform automation does not generate unique IDs. ID 81cb1458-debb-4378-9313-d34f4029f693 already exists - ignoring automation.auto_laden_zondag_8u_12u_lader_op_timer_2
2022-02-27 08:54:22 WARNING (MainThread) [homeassistant.components.light] Platform netatmo not ready yet: None; Retrying in background in 30 seconds
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.components.select] Platform netatmo not ready yet: None; Retrying in background in 30 seconds
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.outside_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.outside_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.outside_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.outside_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.living_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.living_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.living_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.living_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_amilya_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_amilya_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_amilya_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_amilya_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.veranda_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.veranda_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.veranda_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.veranda_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.berging_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.berging_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.berging_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.berging_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.gang_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.gang_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.gang_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.gang_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.badkamer_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.badkamer_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.badkamer_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.badkamer_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_alunya_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_alunya_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_alunya_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.kamer_alunya_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.master_bedroom_thermal_absolutehumidity (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.master_bedroom_thermal_heatindex (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.master_bedroom_thermal_dewpoint (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:23 WARNING (MainThread) [homeassistant.helpers.entity] Entity sensor.master_bedroom_thermal_perception (<class 'custom_components.thermal_comfort.sensor.SensorThermalComfort'>) implements device_state_attributes. Please report it to the custom component author.
2022-02-27 08:54:26 ERROR (MainThread) [custom_components.powercalc.model_discovery] light.amilya_plafond: Cannot autodiscover model, manufacturer or model unknown from device registry
2022-02-27 08:54:26 ERROR (MainThread) [custom_components.powercalc.sensors.power] Skipping sensor setup light.amilya_plafond: Cannot select a mode (LINEAR, FIXED or LUT, WLED), supply it in the config
2022-02-27 08:54:26 ERROR (MainThread) [custom_components.powercalc.model_discovery] light.amilya_staande_lamp: Cannot autodiscover model, manufacturer or model unknown from device registry
2022-02-27 08:54:26 ERROR (MainThread) [custom_components.powercalc.sensors.power] Skipping sensor setup light.amilya_staande_lamp: Cannot select a mode (LINEAR, FIXED or LUT, WLED), supply it in the config
2022-02-27 08:54:26 ERROR (MainThread) [custom_components.powercalc.sensors.power] Skipping sensor setup light.buiten: ('No lookup file found for mode', 'brightness')
2022-02-27 08:54:26 WARNING (MainThread) [homeassistant.components.integration.sensor] Could not restore last state: [<class 'decimal.ConversionSyntax'>]
2022-02-27 08:54:26 WARNING (MainThread) [homeassistant.components.integration.sensor] Could not restore last state: [<class 'decimal.ConversionSyntax'>]
2022-02-27 08:54:26 WARNING (MainThread) [homeassistant.components.integration.sensor] Could not restore last state: [<class 'decimal.ConversionSyntax'>]
2022-02-27 08:54:26 WARNING (MainThread) [homeassistant.components.integration.sensor] Could not restore last state: [<class 'decimal.ConversionSyntax'>]
2022-02-27 08:54:26 WARNING (MainThread) [homeassistant.components.sensor] Platform netatmo not ready yet: None; Retrying in background in 30 seconds
2022-02-27 08:54:29 ERROR (MainThread) [homeassistant.components.sensor] scrape: Error on device update!
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity_platform.py", line 431, in _async_add_entity
    await entity.async_device_update(warning=False)
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 718, in async_device_update
    await task
  File "/usr/src/homeassistant/homeassistant/components/scrape/sensor.py", line 186, in async_update
    await self._async_update_from_rest_data()
  File "/usr/src/homeassistant/homeassistant/components/scrape/sensor.py", line 199, in _async_update_from_rest_data
    value = await self.hass.async_add_executor_job(self._extract_value)
  File "/usr/local/lib/python3.9/concurrent/futures/thread.py", line 52, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/src/homeassistant/homeassistant/components/scrape/sensor.py", line 167, in _extract_value
    tag = raw_data.select(self._select)[self._index]
  File "/usr/local/lib/python3.9/site-packages/bs4/element.py", line 1949, in select
    results = soupsieve.select(selector, self, namespaces, limit, **kwargs)
  File "/usr/local/lib/python3.9/site-packages/soupsieve/__init__.py", line 144, in select
    return compile(select, namespaces, flags, **kwargs).select(tag, limit)
  File "/usr/local/lib/python3.9/site-packages/soupsieve/__init__.py", line 67, in compile
    return cp._cached_css_compile(pattern, ns, cs, flags)
  File "/usr/local/lib/python3.9/site-packages/soupsieve/css_parser.py", line 218, in _cached_css_compile
    CSSParser(
  File "/usr/local/lib/python3.9/site-packages/soupsieve/css_parser.py", line 1159, in process_selectors
    return self.parse_selectors(self.selector_iter(self.pattern), index, flags)
  File "/usr/local/lib/python3.9/site-packages/soupsieve/css_parser.py", line 985, in parse_selectors
    key, m = next(iselector)
  File "/usr/local/lib/python3.9/site-packages/soupsieve/css_parser.py", line 1152, in selector_iter
    raise SelectorSyntaxError(msg, self.pattern, index)
soupsieve.util.SelectorSyntaxError: Invalid character '<' position 0
  line 1:
<span _ngcontent-app-root-c173="">Offline</span>
^
2022-02-27 08:54:29 WARNING (MainThread) [homeassistant.components.binary_sensor] Updating ping binary_sensor took longer than the scheduled update interval 0:00:05
2022-02-27 08:54:30 WARNING (MainThread) [homeassistant.config_entries] Config entry 'OnHub' for upnp integration not ready yet; Retrying in background
2022-02-27 08:54:35 WARNING (MainThread) [homeassistant.bootstrap] Waiting on integrations to complete setup: audiconnect, googlewifi
2022-02-27 08:54:35 ERROR (MainThread) [custom_components.audiconnect.audi_connect_account] support_preheater set to False: 502
2022-02-27 08:54:35 ERROR (MainThread) [homeassistant.components.sensor] Error adding entities for domain sensor with platform audiconnect
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity_platform.py", line 382, in async_add_entities
    await asyncio.gather(*tasks)
  File "/usr/src/homeassistant/homeassistant/helpers/entity_platform.py", line 614, in _async_add_entity
    await entity.add_to_platform_finish()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 782, in add_to_platform_finish
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.
2022-02-27 08:54:35 ERROR (MainThread) [homeassistant.components.sensor] Error while setting up audiconnect platform for sensor
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity_platform.py", line 257, in _async_setup_platform
    await asyncio.gather(*pending)
  File "/usr/src/homeassistant/homeassistant/helpers/entity_platform.py", line 382, in async_add_entities
    await asyncio.gather(*tasks)
  File "/usr/src/homeassistant/homeassistant/helpers/entity_platform.py", line 614, in _async_add_entity
    await entity.add_to_platform_finish()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 782, in add_to_platform_finish
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.
2022-02-27 08:54:50 WARNING (MainThread) [homeassistant.components.media_player] Updating huesyncbox media_player took longer than the scheduled update interval 0:00:02
2022-02-27 08:54:52 ERROR (MainThread) [homeassistant] Error doing job: Task exception was never retrieved
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/components/netatmo/__init__.py", line 233, in register_webhook
    await hass.data[DOMAIN][entry.entry_id][AUTH].async_addwebhook(webhook_url)
  File "/usr/local/lib/python3.9/site-packages/pyatmo/auth.py", line 377, in async_addwebhook
    resp = await self.async_post_request(WEBHOOK_URL_ADD, {"url": webhook_url})
  File "/usr/local/lib/python3.9/site-packages/pyatmo/auth.py", line 335, in async_post_request
    async with self.websession.post(
  File "/usr/local/lib/python3.9/site-packages/aiohttp/client.py", line 1138, in __aenter__
    self._resp = await self._coro
  File "/usr/local/lib/python3.9/site-packages/aiohttp/client.py", line 634, in _request
    break
  File "/usr/local/lib/python3.9/site-packages/aiohttp/helpers.py", line 721, in __exit__
    raise asyncio.TimeoutError from None
asyncio.exceptions.TimeoutError
2022-02-27 08:54:52 WARNING (MainThread) [homeassistant.components.binary_sensor] Updating ping binary_sensor took longer than the scheduled update interval 0:00:05
2022-02-27 08:54:53 WARNING (MainThread) [homeassistant.components.media_player] Updating huesyncbox media_player took longer than the scheduled update interval 0:00:02
2022-02-27 08:55:07 ERROR (MainThread) [homeassistant.components.mobile_app.notify] Timeout sending notification to https://mobile-apps.home-assistant.io/api/sendPush/android/v1
2022-02-27 08:55:07 WARNING (MainThread) [homeassistant.helpers.entity] Update of binary_sensor.google_server is taking over 10 seconds
2022-02-27 08:55:07 WARNING (MainThread) [homeassistant.components.media_player] Updating huesyncbox media_player took longer than the scheduled update interval 0:00:02
2022-02-27 08:55:07 WARNING (MainThread) [homeassistant.components.binary_sensor] Updating ping binary_sensor took longer than the scheduled update interval 0:00:05
2022-02-27 08:55:10 WARNING (MainThread) [homeassistant.components.binary_sensor] Updating ping binary_sensor took longer than the scheduled update interval 0:00:05
2022-02-27 08:55:10 WARNING (MainThread) [homeassistant.components.media_player] Updating huesyncbox media_player took longer than the scheduled update interval 0:00:02
2022-02-27 08:55:35 WARNING (MainThread) [homeassistant.components.binary_sensor] Updating ping binary_sensor took longer than the scheduled update interval 0:00:05
2022-02-27 08:55:36 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:55:37 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 08:55:37 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 08:55:37 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:55:45 WARNING (MainThread) [homeassistant.components.binary_sensor] Updating ping binary_sensor took longer than the scheduled update interval 0:00:05
2022-02-27 08:56:38 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:56:38 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 08:56:38 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 08:56:38 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:57:39 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:57:39 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 08:57:39 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 08:57:39 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:58:41 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:58:41 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 08:58:41 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 08:58:41 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:59:42 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 08:59:42 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 08:59:42 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 08:59:42 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:37 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:00:44 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:00:44 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:00:44 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:00:44 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:45 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:01:45 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:01:45 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:01:45 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:01:54 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:54 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:54 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:01:54 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:01 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:01 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:01 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:01 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:08 WARNING (MainThread) [haffmpeg.tools] Timeout reading image.
2022-02-27 09:02:44 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:44 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:44 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:44 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:46 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:46 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:46 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:46 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:02:46 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:02:46 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:02:46 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:02:46 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:03:48 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:03:48 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:03:48 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:03:48 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:00 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:26 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:27 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:32 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:32 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:32 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:32 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:41 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:41 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:41 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:41 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:04:46 WARNING (MainThread) [haffmpeg.tools] Timeout reading image.
2022-02-27 09:04:49 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:04:49 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:04:49 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:04:49 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:05:40 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:05:40 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:05:40 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:05:40 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:05:51 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:05:51 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:05:51 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:05:51 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:06:50 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:06:50 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:06:50 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:06:50 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:06:53 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:06:53 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:06:53 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:06:53 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:07:54 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:07:54 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:07:54 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:07:54 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:08:06 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:08:06 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:08:06 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:08:06 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:08:56 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:08:56 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:08:56 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:08:56 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:09:57 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:09:57 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:09:57 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:09:57 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:53 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:10:59 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:10:59 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:10:59 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:10:59 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:12:00 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:12:00 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:12:00 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:12:00 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:13:02 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:13:02 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:13:02 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:13:02 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:14:03 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:14:03 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:14:03 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:14:03 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:15:05 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:15:05 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:15:05 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:15:05 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:16:06 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:16:06 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:16:06 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:16:06 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:16:12 WARNING (SyncWorker_25) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 12 and 13
2022-02-27 09:16:12 WARNING (SyncWorker_25) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 30 and 31
2022-02-27 09:16:12 WARNING (SyncWorker_25) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 48 and 49
2022-02-27 09:17:08 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:17:08 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:17:08 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:17:08 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:18:09 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:18:09 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:18:09 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:18:09 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:19:10 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:19:10 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:19:10 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:19:10 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:19:23 WARNING (MainThread) [homeassistant.helpers.service] Unable to find referenced entities input_boolean.car_smartcharging_busy
2022-02-27 09:20:12 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:20:12 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:20:12 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:20:12 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:21:13 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:21:13 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:21:13 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:21:13 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:22:16 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:22:16 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:22:16 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:22:16 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:23:18 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:23:18 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:23:18 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:23:18 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:24:19 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:24:19 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:24:19 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:24:19 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:25:20 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:25:20 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:25:20 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:25:20 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:26:22 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:26:22 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:26:22 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:26:22 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:26:56 WARNING (SyncWorker_6) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 12 and 13
2022-02-27 09:26:56 WARNING (SyncWorker_6) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 30 and 31
2022-02-27 09:26:56 WARNING (SyncWorker_6) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 48 and 49
2022-02-27 09:26:59 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: template value should be a string for dictionary value @ data['action'][0]['data']. Got None. (See ?, line ?). 
2022-02-27 09:26:59 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: invalid template (TemplateSyntaxError: expected token ',', got 'input_number') for dictionary value @ data['condition'][0]['value_template']. Got None. (See ?, line ?). 
2022-02-27 09:26:59 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: template value should be a string for dictionary value @ data['action'][0]['data']. Got None. (See ?, line ?). 
2022-02-27 09:27:23 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:27:23 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:27:23 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:27:23 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:27:52 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:27:52 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:27:52 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'float' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'float' will return '0', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:27:52 WARNING (MainThread) [homeassistant.helpers.template] Template warning: 'as_timestamp' got invalid input 'unknown' when rendering template '{% set nog_te_laden_procent = (states('input_number.auto_lader_doel_procent') | float ) - (states('sensor.audi_e_tron_sportback_55_state_of_charge') | float(default=0) ) %}
{% set nog_te_laden_minuten = nog_te_laden_procent * 9.54 | round(2) %}

Van **{{states('sensor.audi_e_tron_sportback_55_state_of_charge') }}%** naar laadoel **{{states('input_number.auto_lader_doel_procent') }}%** = nog **{{nog_te_laden_procent}}%** laden
= laadtijd **{{ (nog_te_laden_minuten | float(default=0) * 60) | timestamp_custom('%H:%M', false)}}**

**Met directe start**: van nu **{{ as_timestamp(now()) | timestamp_custom('%H:%M') }}** tot **{{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%H:%M',) }}**

**Met timer**: van **{{ (as_timestamp(states('input_datetime.auto_lader_doel_tijd')) - (nog_te_laden_minuten | float(default=0) * 60)) |timestamp_custom('%H:%M', false) }}** tot **{{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}**

{% if  (as_timestamp(now()) + (nog_te_laden_minuten | float * 60)) > state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') %}<font color="red"><ha-icon icon="mdi:battery-charging-medium"></ha-icon> Kan laaddoel {{states('input_number.auto_lader_doel_procent') }}% niet bereiken tegen {{ state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') | timestamp_custom("%H:%M") }}.
Kan wel **{{ ((state_attr('input_datetime.auto_lader_doel_tijd', 'timestamp') - as_timestamp(now())) / 60 / 9.54 ) | round(0) + (states('sensor.audi_e_tron_sportback_55_state_of_charge') |float(default=0) )}}%** bereiken.
</font>
{% endif %}' but no default was specified. Currently 'as_timestamp' will return 'None', however this template will fail to render in Home Assistant core 2022.1
2022-02-27 09:28:25 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:28:25 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_data. State max length is 255 characters.

2022-02-27 09:28:25 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_shortterm_trip_data. State max length is 255 characters.

2022-02-27 09:28:25 ERROR (MainThread) [homeassistant.util.logging] Exception in async_schedule_update_ha_state when dispatching 'audiconnect.updated': ()
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 694, in async_schedule_update_ha_state
    self.async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 539, in async_write_ha_state
    self._async_write_ha_state()
  File "/usr/src/homeassistant/homeassistant/helpers/entity.py", line 663, in _async_write_ha_state
    self.hass.states.async_set(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1357, in async_set
    state = State(
  File "/usr/src/homeassistant/homeassistant/core.py", line 1045, in __init__
    raise InvalidStateError(
homeassistant.exceptions.InvalidStateError: Invalid state encountered for entity ID: sensor.audi_e_tron_sportback_55_longterm_trip_user_reset. State max length is 255 characters.

2022-02-27 09:28:48 WARNING (SyncWorker_7) [homeassistant.loader] We found a custom integration average which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration xiaomi_miio_airpurifier which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_25) [homeassistant.loader] We found a custom integration adaptive_lighting which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_6) [homeassistant.loader] We found a custom integration powercalc which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_5) [homeassistant.loader] We found a custom integration audiconnect which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_22) [homeassistant.loader] We found a custom integration localtuya which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration xiaomi_miio_fan which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_15) [homeassistant.loader] We found a custom integration monitor_docker which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_7) [homeassistant.loader] We found a custom integration buienalarm which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_24) [homeassistant.loader] We found a custom integration thermal_comfort which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_11) [homeassistant.loader] We found a custom integration hacs which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_17) [homeassistant.loader] We found a custom integration shelly which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_25) [homeassistant.loader] We found a custom integration huesyncbox which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_21) [homeassistant.loader] We found a custom integration deepstack_face which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration googlewifi which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_19) [homeassistant.loader] We found a custom integration xiaomi_miot which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration scheduler which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_15) [homeassistant.loader] We found a custom integration ytube_music_player which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_5) [homeassistant.loader] We found a custom integration frigate which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_7) [homeassistant.loader] We found a custom integration afvalbeheer which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_4) [homeassistant.loader] We found a custom integration tgtg which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_6) [homeassistant.loader] We found a custom integration tuya_v2 which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_10) [homeassistant.loader] We found a custom integration google_home which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:48 WARNING (SyncWorker_22) [homeassistant.loader] We found a custom integration anniversaries which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2022-02-27 09:28:58 WARNING (SyncWorker_8) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 12 and 13
2022-02-27 09:28:58 WARNING (SyncWorker_8) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 30 and 31
2022-02-27 09:28:58 WARNING (SyncWorker_8) [homeassistant.util.yaml.loader] YAML file /config/packages/huishoudtoestellen.yaml contains duplicate key "condition". Check lines 48 and 49
2022-02-27 09:29:01 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: template value should be a string for dictionary value @ data['action'][0]['data']. Got None. (See ?, line ?). 
2022-02-27 09:29:01 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: invalid template (TemplateSyntaxError: expected token ',', got 'input_number') for dictionary value @ data['condition'][0]['value_template']. Got None. (See ?, line ?). 
2022-02-27 09:29:01 ERROR (MainThread) [homeassistant.config] Invalid config for [automation]: template value should be a string for dictionary value @ data['action'][0]['data']. Got None. (See ?, line ?). 
2022-02-27 09:29:17 ERROR (Thread-4) [root] Uncaught thread exception
Traceback (most recent call last):
  File "/usr/local/lib/python3.9/threading.py", line 973, in _bootstrap_inner
    self.run()
  File "/usr/local/lib/python3.9/threading.py", line 910, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 3591, in _thread_main
    self.loop_forever(retry_first_connection=True)
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 1756, in loop_forever
    rc = self._loop(timeout)
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 1164, in _loop
    rc = self.loop_read()
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 1556, in loop_read
    rc = self._packet_read()
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 2439, in _packet_read
    rc = self._packet_handle()
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 3033, in _packet_handle
    return self._handle_publish()
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 3327, in _handle_publish
    self._handle_on_message(message)
  File "/usr/local/lib/python3.9/site-packages/paho/mqtt/client.py", line 3570, in _handle_on_message
    on_message(self, self._userdata, message)
  File "/usr/local/lib/python3.9/site-packages/tuya_iot/openmq.py", line 147, in _on_message
    listener(msg_dict)
  File "/usr/local/lib/python3.9/site-packages/tuya_iot/device.py", line 172, in on_message
    self._on_device_report(data["devId"], data["status"])
  File "/usr/local/lib/python3.9/site-packages/tuya_iot/device.py", line 191, in _on_device_report
    self.__update_device(device)
  File "/usr/local/lib/python3.9/site-packages/tuya_iot/device.py", line 178, in __update_device
    listener.update_device(device)
  File "/usr/src/homeassistant/homeassistant/components/tuya/__init__.py", line 256, in update_device
    dispatcher_send(self.hass, f"{TUYA_HA_SIGNAL_UPDATE_ENTITY}_{device.id}")
  File "/usr/src/homeassistant/homeassistant/helpers/dispatcher.py", line 75, in dispatcher_send
    hass.loop.call_soon_threadsafe(async_dispatcher_send, hass, signal, *args)
  File "/usr/local/lib/python3.9/asyncio/base_events.py", line 791, in call_soon_threadsafe
    self._check_closed()
  File "/usr/local/lib/python3.9/asyncio/base_events.py", line 510, in _check_closed
    raise RuntimeError('Event loop is closed')
RuntimeError: Event loop is closed
