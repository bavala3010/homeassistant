############################ Table of Contents ############################ 
# 
#   Automations
############################ Automations ################################## 

automation:

######################################
# car charge: starttimer charging
######################################

- alias: "ðŸš— car 1 // ðŸ”‹ charge // starttimer modus // starten op datum en uur van starttimer"
  id: 'a1ee7170-be64-4826-a2d0-2fb0b25de2c0'
  description: ''
  trigger:
  # check if time now = time of the timer (only the first 5 characters to cut off the seconds)
  - platform: template
    value_template: "{{ states.sensor.time.state == states.input_datetime.car_charge_starttimer_starttime.state[0:5] }}"
  condition:
  # check if SOC < target SOC, otherwise routine should not run
  - condition: template
    value_template: "{{ states('sensor.car_1_soc')| int(2) < (states('input_number.car_charge_target_percentage') | int(2)) }}"
  # only when 'charge mode net' is ON
  - condition: state
    entity_id: input_boolean.car_charge_mode_starttimer
    state: 'on'
  # only when 'charge busy' is OFF  
  - condition: state
    entity_id: input_boolean.car_charge_busy
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id:
      - input_boolean.car_charge_busy
      - input_boolean.car_charge_net_busy
      - input_boolean.car_charge_sun_busy
  - service: script.charger_define_phase_1_or_3_based_on_watt
  - service: script.charger_define_ampere_based_on_watt
  - service: script.charger_define_and_write_register_based_on_ampere
  - service: notify.bart_phone
    data:
      title: Laden gestart
      message: >
        {% set targetsoc = states('input_number.car_charge_target_percentage') | round(default=0) %}
        {% set soc = states('sensor.car_1_soc') | round(default=0) %}
        {% set nog_te_laden_procent = [targetsoc - soc, 0] | max %}
        {% set nog_te_laden_minuten = nog_te_laden_procent * states('input_number.minuten_voor_1_laden') | round(2) %}
        {% set targetrange = states('input_number.car_charge_target_range') | round(default=0) %}
        Laden duurt vermoedelijk tot {{ (as_timestamp(now()) + (nog_te_laden_minuten | float(default=0) * 60)) | timestamp_custom('%a %d %b %-Hu%M') }}.<br>
        Er wordt geladen van {{ soc }}% naar {{ targetsoc }}% = {{ targetrange }} km.
      data:
        tag: car_charging
        color: green
        actions:
        - action: URI
          title: meer info
          uri: /dashboard-car/car-charging
  mode: single
