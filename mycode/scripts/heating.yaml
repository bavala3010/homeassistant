
heating_mode_based_on_weather_forceast:
  alias: 'Heating: Choose mode based on weather forecast'
  variables:
    heating_season_startdate: 09-25
    heating_season_stopdate: 04-15
    forecast_temperature_today_min: "{{ states('input_number.weather_eikenbos_min_temp_today') | float }}"
    forecast_temperature_today_max: "{{ states('input_number.weather_eikenbos_max_temp_today') | float }}"
    heating_threshold_min: "{{ states('input_number.heating_threshold_temperature_min') | float }}"
    heating_threshold_max: "{{ states('input_number.heating_threshold_temperature_max') | float }}"
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: '{{ forecast_temperature_today_min >= heating_threshold_min }}'
            - condition: template
              value_template: '{{ forecast_temperature_today_max >= heating_threshold_max }}'
          sequence:
            - choose:
                - conditions:
                    - condition: template
                      value_template: >-
                        {{ heating_season_stopdate <= now()|as_timestamp|timestamp_custom('%m-%d', False) <= heating_season_startdate }}
                  sequence:
                    - service: input_text.set_value
                      data:
                        value: >-
                          ({{now().strftime("%Y-%m-%d %H:%M:%S")}}) - forecast temp above thresholds. Dates are in spring. Setting mode to OFF.
                      target:
                        entity_id: input_text.heating_mode_from_weather_forecast_log
                    - service: input_select.select_option
                      data:
                        option: 'off'
                      target:
                        entity_id: input_select.heating_mode_from_weather_forecast
              default:
                - service: input_text.set_value
                  data:
                    value: >-
                      ({{now().strftime("%Y-%m-%d %H:%M:%S")}}) - forecast temp above thresholds. Dates are in autumn. Setting mode to ECO.
                  target:
                    entity_id: input_text.heating_mode_from_weather_forecast_log
                - service: input_select.select_option
                  data:
                    option: 'eco'
                  target:
                    entity_id: input_select.heating_mode_from_weather_forecast
      default:
        - choose:
            - conditions:
                - condition: template
                  value_template: >-
                    {{ heating_season_stopdate <= now()|as_timestamp|timestamp_custom('%m-%d', False) <= heating_season_startdate }}
              sequence:
                - service: input_text.set_value
                  data:
                    value: >-
                      ({{now().strftime("%Y-%m-%d %H:%M:%S")}}) - forecast temperatures are below thresholds. Dates are in spring. Setting mode to ECO.
                  target:
                    entity_id: input_text.heating_mode_from_weather_forecast_log
                - service: input_select.select_option
                  data:
                    option: 'eco'
                  target:
                    entity_id: input_select.heating_mode_from_weather_forecast
          default:
            - service: input_text.set_value
              data:
                value: >-
                  ({{now().strftime("%Y-%m-%d %H:%M:%S")}}) - DEFAULT. forecast temperatures are below thresholds. Dates are in autumn. Setting mode to ON (Auto).
              target:
                entity_id: input_text.heating_mode_from_weather_forecast_log
            - service: input_select.select_option
              data:
                option: 'on'
              target:
                entity_id: input_select.heating_mode_from_weather_forecast
  mode: single