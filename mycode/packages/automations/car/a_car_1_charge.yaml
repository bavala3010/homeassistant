############################ Table of Contents ############################ 
# 
#   Automations
#   ðŸš— // charge // autolader is verbonden (niet thuis) = melding
#   ðŸš— // charge // auto laadt (niet thuis) = melding
#   ðŸš— // charge // auto gedaan met laden = melding
#
#   ðŸ”‹ charge planning is veranderd = bepaal SOC per dag
#   ðŸ”‹ charge planning - om 7u00 bepaal target SOC per dag op basis van planning
#   ðŸ”‹ charge planning - om 6u30 zet doel % voor 's anderendaags
#   ðŸ”‹ check om 21u30 batterij tov laaddoel
#   ðŸ”‹ charge target percentage is veranderd
#   ðŸ”‹ charge target range is veranderd
#   ðŸ”‹ gewenst Wattage laadpaal is veranderd = bepaal laadminuten voor 1%
#   ðŸ”‹ gewenst Wattage laadpaal is veranderd = zet de fasen op 1 of 3
#   ðŸ”‹ gewenst Wattage laadpaal is veranderd = bepaal AmpÃ¨re
#   ðŸ”‹ AmpÃ¨re laadpaal is veranderd = bepaal waarde en zend naar register
#   ðŸ”‹ charge - om 10u, 21u30 en 22u30 check of laadkabel ingeplugd is voor charge binnen de volgende 10 uren
#   ðŸ”‹ charge - laadkabel zopas ingeplugd = melding (enkel thuis)
#   ðŸ”‹ charge - laadkabel verbonden maar sessie op laadpaal niet gestart (enkel thuis)
#   ðŸ”‹ charge - laadkabel losgekoppeld = laden stoppen
#   ðŸ”‹ charge - starten op datum en uur van charge net
#   ðŸ”‹ charge - laaddoel bereikt (enkel timer en direct) = laden stoppen + melding sturen (enkel thuis)
#   ðŸ”‹ charge - laaddoeluur bereikt = laden stoppen + verzetten naar 's anderendaags


# bluetooth address Etron: 98:49:14:C1:37:0B
# VIN etron: WAUZZZGE6MB019131

############################ Automations ################################## 
automation:


######################################
# gewoon laden (niet thuis)
######################################

- alias: ðŸš— car 1 // ðŸ”‹ charge // autolader is verbonden (niet thuis) = melding
  id: 'cdd4783a-a810-4b0a-b46d-1b1bf58eb80e'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.car_1_plug_state
    to: 'connected'
  condition:
  - condition: template
    value_template: "{{ states('device_tracker.audi_e_tron_sportback_position') != 'home' }}"
  action:
  - service: notify.bart_madouce_phone
    data:
      title: "ðŸš™ Autolader is verbonden." 
      message: >
        {% set minutes = states('sensor.car_1_remaining_charge_time') %}
        Nu {{states('sensor.car_1_soc')}}%. Nog {{states('sensor.car_1_remaining_charge_time')}} minuten laden tot 100%.
        Geschat einduur: {{ (as_timestamp(now()) + (minutes | float(default=0) * 60)) | timestamp_custom('%a %d %b %-Hu%M') }}.
      data:
        color: green
        tag: auto_laden
        timeout: 300
        clickAction: "/dashboard-car/car-charging"  
  mode: single

- alias: ðŸš— car 1 // ðŸ”‹ charge // auto laadt (niet thuis) = melding
  id: '10f06a54-7eea-4d86-9bf8-2ef07549a4d6'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.car_1_charging_state
    from: 'off'
    to: 'charging'
  condition:
  - condition: template
    value_template: "{{ states('device_tracker.audi_e_tron_sportback_position') != 'home' }}"
  action:
  - service: notify.bart_madouce_phone
    data:
      title: ðŸš™ Auto is aan het laden.
      message: Nu {{states('sensor.car_1_soc') | round()}}% = {{states('sensor.car_1_range')}} km.
        Nog {{states('sensor.car_1_remaining_charge_time')}} laden tot 100%.
      data:
        color: green
        tag: auto_laden
        timeout: 300
        actions:
        - action: URI
          title: meer info
          uri: /dashboard-car/car
  mode: single

- alias: ðŸš— car 1 // ðŸ”‹ charge // auto gedaan met laden = melding
  id: '23ebfe4a-e944-49dc-aa3f-e8a1983e8a56'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.car_1_charging_state
    to: 'completed'
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: 
      - input_boolean.car_charge_mode_now
      - input_boolean.car_charge_busy
      - input_boolean.car_charge_sun_busy
      - input_boolean.car_charge_net_busy
  - service: notify.bart_madouce_phone
    data:
      message: "ðŸš™ Auto heeft gedaan met laden. Nu {{states('sensor.car_1_soc') | round()}}%. {{states('sensor.car_1_range')}} km."
      data:
        notification_icon: mdi:car-electric
        color: green
        tag: auto_laden
        timeout: 43200
        actions:
        - action: URI
          title: meer info
          uri: /dashboard-car/car
  mode: single


# input_number.car_1_target_range
# input_number.car_1_target_range

#######################################
# Target range / SOC
######################################

- alias: ðŸš— car 1 // ðŸ”‹ charge // charge target percentage is veranderd
  id: 'bc9713f6-225f-4e87-99eb-6bb78aa18653'
  description: ''
  trigger:
  - platform: state
    entity_id: input_number.car_1_optimal_target_soc
  condition: []
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.car_1_target_range
    data:
      value: "{{ ((states('input_number.car_1_optimal_target_soc') | float(default=0) ) * (states('sensor.car_range_per_10percent')| float(default=0)) / 10) | int }}"
  - wait_template: ''
    timeout: '00:00:02'      
  mode: single
  max_exceeded: silent

- alias: ðŸš— car 1 // ðŸ”‹ charge // charge target range is veranderd
  id: '79d535f9-0b79-4eb6-98cb-5786bf032300'
  description: ''
  trigger:
  - platform: state
    entity_id: input_number.car_1_target_range
  condition: []
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.car_1_optimal_target_soc
    data:
      value: "{{ ((states('input_number.car_1_target_range') | float(default=0) ) / (states('sensor.car_range_per_10percent')| float(default=0)) * 10) | int }}"
  - wait_template: ''
    timeout: '00:00:02'  
  mode: single
  max_exceeded: silent



#######################################
# Car charger: define ampÃ¨re and phases
#######################################

- alias: "ðŸš— car 1 // ðŸ”‹ charge // gewenst Wattage laadpaal is veranderd = bepaal laadminuten voor 1%, zet de fasen op 1 of 3 en bepaal AmpÃ¨re"
  id: 'f27a3c48-775c-471f-bd6d-33d23c638826'
  description: ''
  trigger:
  - platform: state
    entity_id: input_number.car_charger_watt
  condition: []
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.car_1_min_per_1pct
    data:
      value: "{{ ( 56.925 / (states('input_number.car_charger_watt') | float ) ) | round(2) }}"
  # only when charging is busy, otherwise by changing the W the car will start to charge
  - if:
      - condition: state
        entity_id: input_boolean.car_charge_busy
        state: 'on'
    then:
      - service: script.charger_define_phase_1_or_3_based_on_watt
      - service: script.charger_define_ampere_based_on_watt
        data: {}  
  mode: restart

- alias: "ðŸš— car 1 // ðŸ”‹ charge // AmpÃ¨re laadpaal is veranderd = bepaal waarde en stuur naar register"
  id: '9550cbe2-2979-4c7f-9974-ec7eaebc249e'
  description: ''
  trigger:
  - platform: state
    entity_id: input_number.car_charger_ampere
  condition:
  # only when charging is busy, otherwise by changing the W the car will start to charge
  - condition: state
    entity_id: input_boolean.car_charge_busy
    state: 'on'
  action:
  - service: script.charger_define_and_write_register_based_on_ampere
  mode: restart

  
######################################
# car charge: varia
######################################

- alias: "ðŸš— car 1 // ðŸ”‹ charge // ververs status auto tijdens het laden"
  id: '05fea2a8-3699-41b6-b535-a1a6e49be1b1'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.car_1_charging_state
    to: 'charging'
  condition: []
  action:
  - repeat:
      while:
      - condition: state
        entity_id: sensor.car_1_charging_state
        state: 'charging'
      sequence:
      - service: audiconnect.refresh_cloud_data
        data: {}       
      # - service: audiconnect.refresh_vehicle_data
      #   data:
      #     vin: !secret vin
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
  mode: single

- alias: "ðŸš— car 1 // ðŸ”‹ charge // hernieuw ampÃ¨re en W op laadpaal (bij aftellen counter)"
  id: '227ab015-24f0-461e-a977-4600c813ac98'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.charger_socket1_current_valid_time
    below: '10000'
    # 10000 seconds = +/- 2,5 uren
  - platform: numeric_state
    entity_id: sensor.charger_socket1_current_valid_time
    below: '5000'    
  condition: []
  action:
  - service: script.send_ampere_to_charger
    data:
      registervalue: '{{registervalue}}'
  - service: >
      {% if is_state('sensor.charger_use_1_or_3_phases', '1') %}
        script.set_charger_to_1_phase
      {% elif is_state('sensor.charger_use_1_or_3_phases','3') %}
        script.set_charger_to_3_phases
      {% endif %}      
  variables:
    registervalue: >
      {% set A = states('sensor.charger_actual_applied_maxcurrent') | float %}
      {% if A == 5 %}[0x40a0, 0x0000]
      {% elif A == 6 %}[0x40c0, 0x0000]
      {% elif A == 7 %}[0x40e0, 0x0000]
      {% elif A == 8 %}[0x4100, 0x0000]
      {% elif A == 9 %}[0x4110, 0x0000]
      {% elif A == 10 %}[0x4120, 0x0000]
      {% elif A == 11 %}[0x4130, 0x0000]
      {% elif A == 12 %}[0x4140, 0x0000]
      {% elif A == 13 %}[0x4150, 0x0000]
      {% elif A == 14 %}[0x4160, 0x0000]
      {% elif A == 15 %}[0x4170, 0x0000]
      {% endif %}
  mode: single

- alias: ðŸš— car 1 // ðŸ”‹ charge // fout bij laden
  id: '11dcacf1-6e6e-4500-8bb1-74b5384fde4a'
  description: ""
  trigger:
    - platform: state
      entity_id: sensor.car_1_charging_state
      to: invalid
  condition:
    - condition: state
      entity_id: sensor.charger_status
      state: 'connected'
  action:
    - if:
        - condition: state
          entity_id: person.bart
          state: home
        - condition: template
          value_template: "{{ 7 < now().hour < 23 }}"          
      then:
        - service: notify.bart_phone
          data:
            message: TTS
            data:
              tts_text: >-
                Het laden van de auto geeft een fout. 
              ttl: 0
              priority: high
              media_stream: alarm_stream    
    - service: notify.bart_phone
      data:
        title: Fout bij laden auto
        message: Status van auto is in "error"
        data:
          color: red
          tag: charge_error
    # tip: when the car gets in error status while charging, unlocking the doors solves the error
    # unlock the doors
    - service: lock.unlock
      target:
        entity_id: lock.audi_e_tron_sportback_door_lock
    - repeat:
        while:
        - condition: state
          entity_id: lock.audi_e_tron_sportback_door_lock
          state: locked
        sequence:
        - delay:
            seconds: 15
      # lock the doors again
    - service: lock.lock
      target:
        entity_id: lock.audi_e_tron_sportback_door_lock
    - repeat:
        while:
        - condition: state
          entity_id: sensor.car_1_charging_state
          state: invalid
        sequence:
        - delay:
            minutes: 1
    - service: notify.bart_phone
      data:
        message: "clear_notification"
        data:
          color: red
          tag: charge_error                  
  mode: single


- alias: ðŸš— car 1 // ðŸ”‹ charge // mogelijk probleem met autolader
  id: "7ad728fd-c277-4dfb-a853-b64bb15c2b4b"
  description: ''
  trigger:
    - platform: numeric_state
      entity_id: sensor.charger_current_power
      below: 10
      for:
        hours: 0
        minutes: 3
        seconds: 0
  condition:
    - condition: numeric_state
      entity_id: sensor.charger_modbus_maxcurrent
      above: 5
  action:
    - if:
        - condition: state
          entity_id: person.bart
          state: home
        - condition: template
          value_template: "{{ 8 < now().hour < 23 }}"          
      then:
        - service: notify.bart_phone
          data:
            message: TTS
            data:
              tts_text: >-
                Het laden van de auto geeft een fout. 
              ttl: 0
              priority: high
              media_stream: alarm_stream  
    - service: notify.bart_phone
      metadata: {}
      data:
        message: Laadpaal laadt nu aan {{ states('sensor.charger_current_power') | round() }} W terwijl er {{ states('sensor.charger_modbus_maxcurrent') | int() }} AmpÃ¨re wordt gevraagd.
        title: Mogelijk probleem met auto laden.
        data:
          tag: charge_error
    - service: tts.edge_tts_say
      data:
        entity_id: media_player.living_speaker
        message: Het laden van de auto geeft een fout.
        options:
          pitch: +0Hz
          rate: -10%            


- alias: ðŸš— car 1 // ðŸ”‹ charge // fout bij laden opgelost
  id: 'f7e4598b-9bfc-43af-ae42-27be50547b95'
  description: ""
  trigger:
    - platform: state
      entity_id: sensor.car_1_charging_state
      from: "invalid"
      to: "charging"
  action:
    - service: notify.bart_phone
      data:
        message: "clear_notification"
        data:
          color: red
          tag: charge_error     
  mode: single


- alias: car charger conflict
  id: '1dec6032-66a2-4437-817e-d93bf1eb2ba3'
  description: ""
  trigger:
  - platform: template
    # when real power of charger is 0 for more than 4 minutes  
    value_template: >
      {% set t = ((as_timestamp(now()) - as_timestamp(states.sensor.charger_current_power.last_changed)) / 60 )| int() %}
      {{ states('sensor.charger_actual_applied_maxcurrent') > '5' and states('sensor.charger_current_power') =="0" and t >= 4}}
  condition: []
  action:
  - service: notify.bart_phone
    data:
      title: ðŸš™ Conflict met lader
      message: De laadpaal wil laden aan {{ states('sensor.charger_actual_applied_maxcurrent') }}, maar de auto reageert niet.
      data:
        color: red
        tag: auto_laden
        actions:
        - action: URI
          title: meer info
          uri: /dashboard-car/car
  mode: single

- alias: "ðŸš— car 1 // ðŸ”‹ charge // einde van de zonne-energie productie = check doel om te laden van net"
  id: '702368e4-bf9d-4b21-befd-5387c1bd6804'
  description: ''
  trigger:
    - platform: numeric_state
      entity_id: sensor.solar_power
      for:
        hours: 0
        minutes: 10
        seconds: 0
      below: "1"
    # - platform: template
    #   value_template: >
    #     {{ as_timestamp(states('sensor.zon_van_eikenbos_ondergang')) | int == as_timestamp(now()) | int }}
  condition:
    - condition: template
      value_template: >
        # {% set target = states('input_number.car_1_min_target_soc') | round(default=0) %}
        # {% set soc = states('sensor.car_1_soc') | round(default=0) %}
        {{ soc < target }}
  variables:
    target: >
      {{ states('input_number.car_1_min_target_soc') | int }}
    soc: >
      {{ states('sensor.car_1_soc') | int }}
  action:
    - service: notify.bart_phone
      data:
        title: >
          ðŸš— Laaddoel nog niet bereikt: nog {{ target - soc }}%.
        message: >
          Het minimum doel van {{ target }}% is nog niet bereikt.<br>
          De auto heeft nu {{ soc }}%. Er moet nog {{ target - soc }}% geladen worden.
          {{- '\n' }}
          {% set evening = states('input_boolean.car_charge_evening_net') == 'on' %}
          {% set night = states('input_boolean.car_charge_night_net') == 'on' %}
          {% if evening and night %}
            Deze avond en nacht wordt geladen van het net.
          {% elif evening %}
            Er wordt enkel deze avond nog geladen tot 23u en niet deze nacht.
          {% elif night %}
            Er wordt enkel deze nacht geladen.
          {% else %}
            Er is geen laadplanning ingesteld voor deze avond of nacht.
          {% endif %}
          Wenst u verder te laden van het net?
        data:
          tag: car_charging
          color: red
          clickAction: "/dashboard-car/car-charging"
          notification_icon: mdi:car-electric
  mode: single


- alias: "ðŸš— car 1 // ðŸ”‹ charge // remaining charge time verandert = aanpassen timer"
  id: '53e78619-3cad-4605-8075-fbc4870720d4'
  description: ''
  trigger:
  - platform: state
    entity_id:
      - sensor.audi_e_tron_sportback_remaining_charge_time
      - sensor.car_1_charge_limit
  condition:
    condition: template
    value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"        
  action:
    - service: timer.start
      data:
        duration: >
          {% set target = states('sensor.car_1_charge_limit') | int %}
          {% set soc = states('sensor.car_1_soc') | int %}
          {% set remaining = states('sensor.audi_e_tron_sportback_remaining_charge_time') | int %}
          {{ ((( target - soc ) / ( 100 - soc ) ) * remaining) * 60 | int }}
      target:
        entity_id: timer.car_1_remaining_charge_time
  mode: single      