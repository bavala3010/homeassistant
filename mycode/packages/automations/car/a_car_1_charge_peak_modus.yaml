automation:

######################################
# car charge: peak mode = keep net usage below the peak
######################################

- alias: "ðŸš— car 1 // ðŸ”‹ charge // modus peak // start en bezig: pas elke minuut het vermogen van de lader aan"
  id: '396413b7-8e60-4e01-93d9-9dbed58278f2'
  trigger:
  - platform: time_pattern
    minutes: /1
  condition:
    # only if charging in peak mode 
  - condition: state
    entity_id: input_boolean.car_charge_mode_peak
    state: 'on'
    # only if charger cable is connected to home charger or already charging
  - condition: template
    value_template: "{{ states('sensor.charger_status') in ['connected', 'charging'] }}"
  variables:
      wattage: >
        {% set maxpower = states('input_number.car_charge_net_max_netwattage') | float(default=0) %}
        {% set net = states('sensor.net_power_avg_2min') | float %}
        {% set charger = states('sensor.charger_current_power_avg') | float(default=0) %}
        {{ (( maxpower - net + charger ) / 1000) | float }}
  action:
    - if:
        - condition: template
          value_template: "{{ wattage > 1.3 }}"
      then:
        - action: input_number.set_value
          target:
            entity_id: input_number.car_charger_watt
          data:
            value: "{{ wattage }}"
        - wait_template: ''
          timeout: '00:00:05'
        - action: script.charger_define_phase_1_or_3_based_on_watt
        - action: script.charger_define_ampere_based_on_watt
        - action: script.charger_define_and_write_register_based_on_ampere
        # - if:
        #     - condition: template
        #       value_template: "{{ wattage > 1.3 }}"
        #   then:
        #     - action: notify.bart_phone
        #       data:
        #         title: Auto is gestart met laden volgens piekvermogen
        #         message: >
        #           Zon nu {{ states('sensor.solar_power') | int }} W | Net: {{ states('sensor.net_power')}} W | Auto laadt nu aan {{states('input_number.car_charger_watt') | round(1)}} kW<br>
        #           Laden met netverbruik onder piek: {{states('input_number.car_charge_net_max_netwattage')}}<br>
        #           Auto: {{states('sensor.car_1_soc') | round()}}%. Doel: {{ states('input_number.car_1_optimal_target_soc') | round(0)}}%<br>
        #           Vandaag al {{ states('sensor.car_charge_solar_energy_daily') | round(1) }} kWh geladen met zon en {{ states('sensor.car_charge_net_energy_daily') | round(1) }} kWh van het net.
        #         data:
        #           tag: car_charging_peak
        #           color: green
        #           notification_icon: "mdi:car-electric"
        #           actions:
        #           - action: URI
        #             title: meer info
        #             uri: /dashboard-car/car-charging        
      else:
        - action: script.stop_charger
          data: {}
  mode: single  